name: Frontend Continuous Deployment

on:
  workflow_dispatch:

env:
  AWS_REGION: us-east-1

defaults:
  run:
    working-directory: ./starter/frontend

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: CI=true npm test

  build:
    runs-on: ubuntu-latest
    needs: [test]
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: ${{env.AWS_REGION}}
      - name: Login to AWS ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build frontend application
        run: docker build --build-arg=REACT_APP_MOVIE_API_URL=${{ env.REACT_APP_MOVIE_API_URL }} --tag=mp-frontend:latest .
    
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Configure kubeconfig for EKS
        run:
      - name: Update image tag
        run: kustomize edit set image frontend=<ECR_REPO_URL>:<NEW_TAG_HERE>
      - name: Deploy frontend application
        run: kustomize build | kubectl apply -f -
